# Generated by generate.rb at 2012-12-02 15:00:09 +0100, heads/master-0-gab73edc
require 'helper'

begin
  require 'dm-core'
  DataMapper.setup(:default, :adapter => :in_memory)
  store = Juno::Adapters::DataMapper.new(:setup => "sqlite3://#{make_tempdir}/adapter_datamapper")
  store['foo'] = 'bar'
  store.clear
  store.close

  describe "adapter_datamapper" do
    let(:store) do
      Juno::Adapters::DataMapper.new(:setup => "sqlite3://#{make_tempdir}/adapter_datamapper")
    end

    include_context 'juno_store'
    it_should_behave_like 'null_stringkey_stringvalue'
    it_should_behave_like 'store_stringkey_stringvalue'
    it_should_behave_like 'returndifferent_stringkey_stringvalue'
    it_should_behave_like 'returndifferent_stringkey_objectvalue'
    it_should_behave_like 'null_stringkey_objectvalue'
    it_should_behave_like 'store_stringkey_objectvalue'
    it 'does not cross contaminate when storing' do
      first = Juno::Adapters::DataMapper.new(:setup => "sqlite3://#{make_tempdir}/datamapper-first")
      first.clear

      second = Juno::Adapters::DataMapper.new(:repository => :sample, :setup => "sqlite3://#{make_tempdir}/datamapper-second")
      second.clear

      first['key'] = 'value'
      second['key'] = 'value2'

      first['key'].should == 'value'
      second['key'].should == 'value2'
    end

    it 'does not cross contaminate when deleting' do
      first = Juno::Adapters::DataMapper.new(:setup => "sqlite3://#{make_tempdir}/datamapper-first")
      first.clear

      second = Juno::Adapters::DataMapper.new(:repository => :sample, :setup => "sqlite3://#{make_tempdir}/datamapper-second")
      second.clear

      first['key'] = 'value'
      second['key'] = 'value2'

      first.delete('key').should == 'value'
      first.key?('key').should == false
      second['key'].should == 'value2'
    end

  end
rescue LoadError => ex
  puts "\e[31mTest adapter_datamapper not executed: #{ex.message}\e[0m"
rescue Exception => ex
  puts "\e[31mTest adapter_datamapper not executed: #{ex.message}\e[0m"
  puts ex.backtrace.join("\n")
end
